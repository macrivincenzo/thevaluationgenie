 EXACT INSTRUCTIONS FOR REPLIT - ROUND 2

When making these changes don´t change anything from the design, features and functionalities. 
Tell Replit: "You only implemented 30% of my instructions. Now 
implement the remaining 70% to reach 100/100. Here are the EXACT changes needed:"
1. FIX RENDER-BLOCKING RESOURCES (450ms savings)
Tell Replit: "Add this to your HTML head section:"

<!-- CRITICAL: Inline critical CSS -->
<style>
/* Above-the-fold CSS only */
body { margin: 0; font-family: system-ui, -apple-system, sans-serif; }
.header { background: #fff; padding: 1rem; position: relative; }
.hero { min-height: 50vh; display: flex; align-items: center; }
</style>

<!-- CRITICAL: Defer non-critical CSS -->
<link rel="preload" href="/css/main.css" as="style" onload="this.onload=null;this.rel='stylesheet'">
<noscript><link rel="stylesheet" href="/css/main.css"></noscript>

<!-- CRITICAL: Defer ALL JavaScript -->
<script src="/js/main.js" defer></script>
<script src="/js/analytics.js" defer></script>

2. REMOVE UNUSED JAVASCRIPT (408 Kibit savings)
Tell Replit: "Remove these unused JavaScript files and functions:"

// CRITICAL: Remove unused imports
// Remove any unused libraries like jQuery, Bootstrap JS, etc.

// CRITICAL: Use dynamic imports for non-critical features
const loadAnalytics = () => import('./analytics.js');
const loadChatWidget = () => import('./chat.js');

// CRITICAL: Only load when needed
document.addEventListener('DOMContentLoaded', () => {
  // Load analytics only after user interaction
  document.addEventListener('click', loadAnalytics, { once: true });
  
  // Load chat widget only if contact form exists
  if (document.querySelector('.contact-form')) {
    loadChatWidget();
  }
});

3. REMOVE UNUSED CSS (96 Kibit savings)
Tell Replit: "Remove unused CSS rules and consolidate styles:"

/* CRITICAL: Remove unused CSS classes and rules */
/* Use browser dev tools to identify unused CSS */

/* CRITICAL: Consolidate similar styles */
.button, .btn, .cta-button {
  padding: 12px 24px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  background: #007bff;
  color: white;
}

/* CRITICAL: Use CSS custom properties */
:root {
  --primary-color: #007bff;
  --secondary-color: #6c757d;
  --font-size-base: 16px;
  --spacing-unit: 1rem;
}

4. IMPLEMENT CACHE OPTIMIZATION (209 Kibit savings)
Tell Replit: "Add this to your .htaccess file:"


# CRITICAL: Cache static assets for 1 year
<FilesMatch "\.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$">
    ExpiresActive On
    ExpiresDefault "access plus 1 year"
    Header set Cache-Control "public, immutable"
</FilesMatch>

# CRITICAL: Cache HTML for 1 hour
<FilesMatch "\.(html|htm)$">
    ExpiresActive On
    ExpiresDefault "access plus 1 hour"
    Header set Cache-Control "public, max-age=3600"
</FilesMatch>

# CRITICAL: Enable compression
<IfModule mod_deflate.c>
    AddOutputFilterByType DEFLATE text/plain
    AddOutputFilterByType DEFLATE text/html
    AddOutputFilterByType DEFLATE text/xml
    AddOutputFilterByType DEFLATE text/css
    AddOutputFilterByType DEFLATE application/xml
    AddOutputFilterByType DEFLATE application/xhtml+xml
    AddOutputFilterByType DEFLATE application/rss+xml
    AddOutputFilterByType DEFLATE application/javascript
    AddOutputFilterByType DEFLATE application/x-javascript
</IfModule>

5. FIX CONSOLE ERRORS
Tell Replit: "Add error handling to prevent console errors:"

// CRITICAL: Add error handling
window.addEventListener('error', (e) => {
  console.error('JavaScript error:', e.error);
  // Prevent errors from breaking the page
  return true;
});

// CRITICAL: Check for undefined variables
if (typeof someVariable !== 'undefined') {
  // Use the variable safely
}

6. FIX CONTRAST ISSUES (Accessibility)
Tell Replit: "Update these CSS colors for better contrast:"

/* CRITICAL: Fix contrast ratios */
.text-primary { color: #000000; } /* 21:1 ratio on white */
.text-secondary { color: #333333; } /* 12.6:1 ratio on white */
.text-muted { color: #666666; } /* 4.5:1 ratio on white */

/* CRITICAL: Ensure button contrast */
.button {
  background: #007bff;
  color: #ffffff;
  border: 1px solid #0056b3;
}

/* CRITICAL: Add focus indicators */
button:focus, a:focus, input:focus {
  outline: 2px solid #007bff;
  outline-offset: 2px;
}

7. ADD SECURITY HEADERS (Best Practices)
Tell Replit: "Add these security headers to .htaccess:"

# CRITICAL: Security headers
Header always set X-Content-Type-Options nosniff
Header always set X-Frame-Options DENY
Header always set X-XSS-Protection "1; mode=block"
Header always set Referrer-Policy "strict-origin-when-cross-origin"

# CRITICAL: Content Security Policy
Header always set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self';"

# CRITICAL: HSTS
Header always set Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

Implement ALL of these changes exactly as written. Test after each change to ensure the site still works. The goal is to reach 100/100 across all metrics."
Expected Results:
Performance: 60 → 100
Accessibility: 96 → 100
Best Practices: 96 → 100
SEO: 100 → 100
